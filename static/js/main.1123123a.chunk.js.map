{"version":3,"sources":["App.js","index.js"],"names":["emojiDictionary","emojilist","Object","keys","App","useState","meaning","setmeaning","className","onChange","emoji","userInput","target","value","undefined","style","color","fontSize","map","onClick","onclickhandler","padding","cursor","rootElement","document","getElementById","createRoot","render"],"mappings":"2LAKIA,EAAkB,CACpB,eAAM,UACN,eAAM,cACN,eAAM,OACN,eAAM,SACN,eAAM,QACN,eAAM,SACN,eAAM,SACN,eAAM,SACN,eAAM,kBACN,eAAM,WAGJC,EAAYC,OAAOC,KAAKH,GAEb,SAASI,IACtB,MAA8BC,qBAAU,mBAAjCC,EAAO,KAAEC,EAAU,KAgB1B,OACE,sBAAKC,UAAU,MAAK,UAClB,oBAAIA,UAAU,UAAS,SApClB,kBAqCL,uBAAOC,SAjBX,SAAwBC,GACtB,IAAIC,EAAYD,EAAME,OAAOC,MACzBP,EAAUN,EAAgBW,QACdG,IAAZR,GAAuC,KAAdK,IAC3BL,EAAU,kCAEZC,EAAWD,EACb,IAWI,qBAAKE,UAAU,SAAQ,SAAEF,IAEzB,oBAAIS,MAAO,CAAEC,MAAO,OAAQC,SAAU,QAAS,SAAC,kBAC/ChB,EAAUiB,KAAI,SAAUR,GACvB,OACE,sBACES,QAAS,kBAfnB,SAAwBT,GAEtBH,EADcP,EAAgBU,GAEhC,CAYyBU,CAAeV,EAAM,EACpCK,MAAO,CAAEM,QAAS,UAAWJ,SAAU,OAAQK,OAAQ,WAAY,SAGlEZ,GAFIA,EAKX,MAGN,CCpDA,IAAMa,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACvB,EAAG,M","file":"static/js/main.1123123a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nvar color = \"aqua\";\nvar text = \"Emoji-Meaning\";\n\nvar emojiDictionary = {\n  \"üòä\": \"smiling\",\n  \"üòÅ\": \"laugh-bully\",\n  \"üòé\": \"cool\",\n  \"üòç\": \"lovely\",\n  \"üò•\": \"sorry\",\n  \"üò™\": \"tired'\",\n  \"üò¥\": \"sleepy\",\n  \"üò±\": \"amazed\",\n  \"üòá\": \"good intentions\",\n  \"ü§ê\": \"silence\"\n};\n\nvar emojilist = Object.keys(emojiDictionary);\n\nexport default function App() {\n  const [meaning, setmeaning] = useState();\n\n  function OnInputHandler(emoji) {\n    var userInput = emoji.target.value;\n    var meaning = emojiDictionary[userInput];\n    if (meaning === undefined && userInput !== \"\") {\n      meaning = \"we don't have that in database\";\n    }\n    setmeaning(meaning);\n  }\n\n  function onclickhandler(emoji) {\n    var meaning = emojiDictionary[emoji];\n    setmeaning(meaning);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"heading\">{text}</h1>\n      <input onChange={OnInputHandler}></input>\n      <div className=\"answer\">{meaning}</div>\n\n      <h2 style={{ color: \"aqua\", fontSize: \"3rem\" }}>emoji we have</h2>\n      {emojilist.map(function (emoji) {\n        return (\n          <span\n            onClick={() => onclickhandler(emoji)}\n            style={{ padding: \"0.25rem\", fontSize: \"2rem\", cursor: \"pointer\" }}\n            key={emoji}\n          >\n            {emoji}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}